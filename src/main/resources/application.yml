server:
  port: 8080
  servlet:
    context-path: /
    encoding:
      charset: UTF-8
      enabled: true
      force: true

spring:
  datasource:
    driver-class-name: org.h2.Driver
    url: jdbc:h2:file:./h2-data
    username: sa
    password:
  mvc:
    view:
      prefix: /templates/
      suffix: .html

  jpa:
    hibernate:
      ddl-auto: create #create update none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: true

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${google.oauth.id}
            client-secret: ${google.oauth.secret}
            scope:
              - email
              - profile
            #redirect-uri: http://localhost:8080/login/oauth2/code/google #google은 이 콜백주소가 고정이라 생략해도됨
          naver:
            client-id: ${naver.oauth.id}
            client-secret: ${naver.oauth.secret}
            scope:
              - name
              - email
            client-name:
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8080/login/oauth2/code/naver #naver는 콜백주소를 설정해줘야한다
        # naver는 provider로 등록되어있지않아 직접 작성한다.
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response # 회원정보를 json으로 받는데 response라는 키값으로 네이버가 리턴해준다.
